@model DAL.ViewModel.EditUserModel

@{
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
    ViewData["Title"] = "";
    ViewBag.Active = "Users";
}


<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

<div class="user-list-container">

    <!-- name row -->
    <div class="row px-0 d-flex justify-content-between mb-3">
        <div class="col fs-4 fs-sm-2 fw-bold special-color">Edit User</div>
        <div class="col d-flex justify-content-end">

            <a asp-action="UserListAll" class="d-flex align-items-center justify-content-center px-1 px-sm-2 fs-6" id="add-user-btn-for" style="text-decoration: none;">
                <div class="d-flex align-items-center justify-content-center w-100 h-100">
                    < Back
                </div>
            </a>

        </div>
    </div>

    <!-- user input files -->

    <form class="add-user-field border rounded" method="post" id="addUserForm" asp-action="EditUser" asp-controller="AdminUsers">

        <div class="d-flex flex-column flex-md-row ">
            <div class="col form-floating input-class">
                <input type="text" class="form-control" id="firstName" placeholder="John" asp-for = "Firstname">
                @* <span asp-validation-for="Firstname" class="valid"></span> *@
                <label for="floatingInput">First Name</label>
            </div>
            <div class="col form-floating input-class">
                <input type="text" class="form-control" id="lastName" placeholder="Doe" asp-for = "Lastname">
                <label for="floatingInput">Last Name</label>
            </div>
        </div>


        <div class="d-flex flex-column flex-md-row ">
            <div class="col form-floating input-class">
                <input type="text" class="form-control" id="username" placeholder="johndoe" asp-for = "Username">
                <label for="username">Username</label>
            </div>
            <div class="col form-floating input-class">
                <select class="form-select" id="inputRole" aria-label="Floating label select example" asp-for="Roleid">
                    <option value="" selected>Select Role</option>
                    <option value="1">Super Admin</option>
                    <option value="2">Account Manager</option>
                    <option value="3">Chef</option>
                </select>
                <label for="inputRole">Role</label>
            </div>
        </div>


        <div class="d-flex flex-column flex-md-row ">
            <div class="col form-floating input-class">
                <input type="email" class="form-control" id="userEmail" placeholder="john@doe.com" asp-for = "Email" disabled>
                <label for="userEmail">Email</label>
                <input type="email" class="form-control" id="userEmail" placeholder="john@doe.com" asp-for = "Email" hidden>

            </div>
            <div class="col form-floating input-class">
                <select class="form-select" id="inputActive" aria-label="Floating label select example" asp-for="Status">
                    <option value="True">Active</option>
                    <option value="False">Inactive</option>
                </select>
                <label for="inputActive">Status</label>
            </div>
        </div>



        <!-- Browse File  -->
        <div class="d-flex flex-column justify-content-center align-items-center bg-white position-relative" id="browse-files">
            <input type="file" class="position-absolute bg-primary opacity-0 h-100 w-100">
            <img src="~/images/select-files.jfif" alt="" style="height: 25px;">
            <div style="font-size: 15px;">Browse Files</div>
        </div>

        <!-- address select  -->
        <div class="d-flex flex-column flex-md-row ">
            <div class="col form-floating input-class">
                <select class="form-select" id="inputCountry" aria-label="Floating label select example" onchange="loadStates()" asp-for = "Countryid">
                    @foreach (var country in Model.CountryList)
                    {
                        <!-- Ensure that the country ID is selected based on the model's CountryId -->
                        {
                            var isSelected = country.CountryId == @Model.Countryid ? true : false;
                            <option value="@country.CountryId" selected="@isSelected">@country.CountryName</option>
                        }
                    }
                </select>
                <label for="inputCountry">Country</label>
            </div>
            <div class="col form-floating input-class">
                <select class="form-select" id="inputState" aria-label="Floating label select example" onchange="loadCities()" asp-for = "Stateid">
                    @foreach (var state in Model.StateList)
                    { 
                        if(state.CountryId == @Model.Countryid)
                        {
                            if(@Model.Stateid!=0){
                                var isSelected = state.StateId == @Model.Stateid ? true : false;
                                <option value="@state.StateId" selected="@isSelected">@state.StateName</option>
                            }
                        }
                    }
                </select>
                <label for="inputState">State</label>
            </div>
            <div class="col form-floating input-class">
                <select class="form-select" id="inputCity" aria-label="Floating label select example" asp-for = "Cityid">
                    @foreach (var city in Model.CityList)
                    { 
                        if(city.StateId == @Model.Stateid)
                        {
                            if(@Model.Cityid!=0){
                                var isSelected = city.CityId == @Model.Cityid ? true : false;
                                <option value="@city.CityId" selected="@isSelected">@city.CityName</option>
                            }else{
                                <option value="" selected">Select City</option>
                            }

                        }
                    }
                </select>
                <label for="inputCity">City</label>
            </div>
        </div>

        <div class="d-flex flex-column flex-md-row ">
            <div class="col form-floating input-class">
                <input type="text" class="form-control" id="zipcode" placeholder="395010" asp-for = "Zipcode">
                <label for="zipcode">Zipcode</label>
            </div>
            <div class="col form-floating input-class">
                <input type="text" class="form-control" id="address" placeholder="" asp-for="Address1">
                <label for="address">Address</label>
            </div>
            <div class="col form-floating input-class">
                <input type="text" class="form-control" id="inputPhone" placeholder="" asp-for="Phone">
                <label for="inputPhone">Phone</label>
            </div>
        </div>

        <div class="d-flex justify-content-start align-items-center">
            <button class="create-cancel-btn text-white" id="createInput" type="submit">Update User</button>
            <button class="create-cancel-btn bg-white" id="cancelInput" asp-action="UserListAll" asp-controller="AdminUsers" type="button"><a asp-action="UserListAll" asp-controller="AdminUsers" style="text-decoration: none;">Cancel</a></button>
        </div>
    </form>


</div>


@section Scripts{
    <script>

    function loadStates() {

        var countrySelect = $('#inputCountry');
        var stateSelect = $('#inputState');
        var citySelect = $('#inputCity');

        stateSelect.empty();
        citySelect.empty();

        var countryID = countrySelect.val();

        stateSelect.append('<option selected>Select State</option>');
        citySelect.append('<option selected>Select City</option>');

        $.ajax({
            url: '@Url.Action("GetStates", "Dashboard")',  // Use your action method here
            data: { countryId: countryID },
            type: 'GET',
            success: function(data) {
                // Loop through the returned states and append them to the state dropdown
                $.each(data, function(index, state) {
                    stateSelect.append('<option value="' + state.stateId + '">' + state.stateName + '</option>');
                });
            }
        });
    }

    function loadCities() {

        var stateSelect = $('#inputState');
        var citySelect = $('#inputCity');

        citySelect.empty();

        var stateId = stateSelect.val();

        citySelect.append('<option selected>Select City</option>');

        $.ajax({
            url: '@Url.Action("GetCities", "Dashboard")',  // Use your action method here
            data: { stateId: stateId },
            type: 'GET',
            success: function(data) {
                // Loop through the returned states and append them to the state dropdown
                $.each(data, function(index, city) {
                    citySelect.append('<option value="' + city.cityId + '">' + city.cityName + '</option>');
                });
            }
        });
    }

    $(document).ready(function() {
        if(@Model.Stateid == 0)
            loadStates();
    });



        $('#addUserForm').submit(function (event) {
            event.preventDefault();
            let isValid = true;

            console.log("Hi");


            //Required Field Validation (Except Image)
            $("#addUserForm input[type='text'], #addUserForm select,  #addUserForm input[type='email']").each(function () {
                let inputValue = $(this).val() ? $(this).val().trim() : "";

                if (!inputValue || inputValue === "0") {
                    $(this).addClass("is-invalid"); // Add error styling
                    $(this).next(".invalid-feedback").remove(); // Remove old message
                    $(this).after('<div class="invalid-feedback">This field is required</div>');
                    isValid = false;
                } else {
                    $(this).removeClass("is-invalid");
                    $(this).next(".invalid-feedback").remove();
                }
            })

            let phoneNumber = $("#inputPhone").val().trim();
            if (!/^\d{10}$/.test(phoneNumber)) {
                $("#inputPhone").addClass("is-invalid");
                $("#inputPhone").next(".invalid-feedback").remove();
                $("#inputPhone").after('<div class="invalid-feedback">Phone number must be exactly 10 digits</div>');
                isValid = false;
            } else {
                $("#inputPhone").removeClass("is-invalid");
                $("#inputPhone").next(".invalid-feedback").remove();
            }


            let zipcode = $("#zipcode").val().trim();
            let zipcodeRegex = /^\d{6}$/; // US ZIP code format (5 digits or 5+4 digits)

            if (zipcode === "" || zipcode === "0" || !zipcodeRegex.test(zipcode)) {
                $("#zipcode").addClass("is-invalid");
                $("#zipcode").next(".invalid-feedback").remove();
                $("#zipcode").after('<div class="invalid-feedback">Please enter a valid ZIP code</div>');
                isValid = false;
            } else {
                $("#zipcode").removeClass("is-invalid");
                $("#zipcode").next(".invalid-feedback").remove();
            }


            
            

            console.log(isValid);

            if (isValid) {
                $('#addUserForm').unbind('submit').submit();
            }


        });

        $("#addUserForm input[type='text'], #addUserForm select,  #addUserForm input[type='email']").on('input change', function () {

            $(this).removeClass("is-invalid");
            $(this).next(".invalid-feedback").remove();
                
        })


    </script>
}