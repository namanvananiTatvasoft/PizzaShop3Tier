@model DAL.ViewModel.MenuViewModel

@{
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
    ViewData["Title"] = "Menu";
    ViewBag.Active = "Menu";
}
<head>
    @* <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"> *@

    <style>
        .additemform .form-floating>label {
            position: absolute;
            top: 0;
            left: 10px !important;
            opacity: 0.65;
        }
    </style>
</head>



<div class="menu-item-container">

    <!-- Menu Display -->
    <div class="row px-0 d-flex justify-content-between mb-3">
        <div class="col-sm-1 d-flex fs-2 fw-bold special-color">Menu</div>
    </div>

    <!-- Menu Item List and Modifiers -->
    <div class="row border rounded menu-list-tab bg-white">
        <div class="d-flex nav" id="nav-tab" role="tablist" >
            <button class="nav-link tab-btn active d-flex align-items-center" id="nav-home-tab" data-bs-toggle="tab" data-bs-target="#nav-home" type="button" role="tab" aria-controls="nav-home" aria-selected="true">
                <img src="~/images/list-check.svg" alt="">
                <div>Items</div>
            </button>
            <button class="nav-link tab-btn d-flex align-items-center" id="nav-profile-tab" data-bs-toggle="tab" data-bs-target="#nav-profile" type="button" role="tab" aria-controls="nav-profile" aria-selected="false">
                <img src="~/images/sidebar icons/dashboard.png" alt="" style="height: 17px;">
                <div>Modifiers</div>
            </button>
        </div>
    </div>

    <div class="row menu-list-table bg-white">
        <div class="tab-content" id="nav-tabContent">

            <!-- items content  -->
            <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab" tabindex="0">
                <partial name="~/Views/Menu/_MenuListItems.cshtml"/>
            </div>

            <!-- modifiers content  -->
            <div class="tab-pane fade" id="nav-profile" role="tabpanel" aria-labelledby="nav-profile-tab" tabindex="0">
                @* tab 2 *@
                <div id="modifierContent"></div>
                @* <partial name="~/Views/Menu/_modifier.cshtml"/> *@
            </div>

        </div>
    </div>


    <!-- add category modal  -->
    <div class="modal fade" id="addCategoryModel" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <!-- </div> -->
                <form class="modal-body" id="categoryAddForm">
                    <div class="d-flex justify-content-between mb-5">
                        <h1 class="modal-title fs-5 fw-semibold" id="exampleModalLabel">Add Category</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>

                    <div class="form-group mb-3">
                        <input type="text" class="form-control py-2" id="categoryName" placeholder="Name*" asp-for="categoryAdd.Categoryname">
                        <div id="categoryNameError" class="text-danger"></div>
                    </div>

                    <div class="form-group mb-5">
                        <textarea class="form-control py-2" id="categoryDescription" rows="2" placeholder="Description" asp-for="categoryAdd.Description"></textarea>
                    </div>
                    

                    <div class="d-flex justify-content-end">
                        <button type="submit" class="save-cancel-btn fw-semibold" id="save-btn">Save</button>
                        <button type="button" class="save-cancel-btn fw-semibold" id="cancel-btn" data-bs-dismiss="modal">Cancel</button>
                    </div>

                </form>
            </div>
        </div>
    </div>

    <!-- Edit Category Modal -->
    <div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <!-- </div> -->
                <form class="modal-body" method="post" id="categoryEditForm">
                    <div class="d-flex justify-content-between mb-5">
                        <h1 class="modal-title fs-5 fw-semibold" id="exampleModalLabel">Edit Category</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <input type="text" asp-for="categoryAdd.Categoryid" id="inputcategoryId" hidden>

                    <div class="form-group mb-3">
                        <input type="text" class="form-control py-2" id="inputcategoryName" placeholder="Name*" asp-for="categoryAdd.Categoryname">
                        <div id="categoryNameEditError" class="text-danger"></div>
                    </div>

                    <div class="form-group mb-5">
                        <textarea class="form-control py-2" id="inputcategoryDescription" rows="2" placeholder="Description" asp-for="categoryAdd.Description"></textarea>
                    </div>
                    

                    <div class="d-flex justify-content-end">
                        <button type="submit" class="save-cancel-btn fw-semibold" id="save-btn">Save</button>
                        <button type="button" class="save-cancel-btn fw-semibold" id="cancel-btn" data-bs-dismiss="modal">Cancel</button>
                    </div>

                </form>
            </div>
        </div>
    </div>

    <!-- Delete Category Modal -->
    <div class="modal fade" id="deleteCategoryModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <!-- </div> -->
                <form class="modal-body" asp-action="MenuListCategoryDelete" method="post">
                    <div class="d-flex justify-content-between mb-3">
                        <h1 class="modal-title fs-5 fw-semibold special-color" id="exampleModalLabel">Delete Confirmation</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <input type="text" asp-for="categoryAdd.Categoryid" id="deletecategoryId" hidden>

                    <div class="d-flex align-items-center flex-column justify-content-center mb-4">
                        <img src="~/images/warning.png" alt="" style="height: 35px; width: 35px;">
                        <div class="f-5">Are You Sure you want to delete Category ?</div>
                    </div>

                    <div class="d-flex justify-content-center">
                        <button type="submit" class="save-cancel-btn fw-semibold" id="save-btn">Yes</button>
                        <button type="button" class="save-cancel-btn fw-semibold" id="cancel-btn" data-bs-dismiss="modal">No</button>
                    </div>

                </form>
            </div>
        </div>
    </div>

    <!-- add item modal  -->
    <div class="modal fade" id="addItemModel" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered w-75" style="max-width: 100% !important">
            <div class="modal-content">
                <!-- </div> -->
                @* <form class="modal-body additemform" asp-action="MenuListItemAdd" method="post" enctype="multipart/form-data" id="itemAddForm"> *@
                <form class="modal-body additemform" method="post" enctype="multipart/form-data" id="itemAddForm">
                    <div class="d-flex justify-content-between">
                        <div class="special-color fw-bold fs-4">Add Item</div>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>

                    <div class="row pe-2 mt-2">

                        <div class="col-md-8 col-12">

                            <div class="row">
                                <div class="col-md-6 col-12 form-floating mt-3">
                                    <select class="form-select" id="categoryDropdown" aria-label="Select Food Category" name="ItemCategory" required>
                                        @foreach(var category in Model.categoryList)
                                        {
                                            @* <option value="@category.Categoryid" selected="@(category.Categoryid == Model.items.Categoryid)">@category.Categoryname</option> *@
                                            <option value="@category.Categoryid">@category.Categoryname</option>

                                        }
                                    </select>
                                    <label for="categoryDropdown">Food Category</label>
                                </div>
                                <div class="col-md-6 col-12 form-floating mt-3">
                                    <input type="text" class="form-control" id="name" placeholder="Name" name="ItemName" required>
                                    <label for="name">Name*</label>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-xl-6 col-12">
                                    <div class="row">
                                        <div class="col-md-6 col-12 form-floating mt-3">
                                            <select class="form-select" id="itemTypeDropdown" aria-label="Select Food Category" name="ItemType">
                                                @* <option value="" selected disabled>Select Category</option> *@
                                                <option value="true" selected>Veg</option>
                                                <option value="false">Non-Veg</option>
                                            </select>
                                            <label for="itemTypeDropdown">Item Type</label>
                                        </div>
                                        <div class="col-md-6 col-12 form-floating mt-3">
                                            <input type="number" class="form-control" id="name" placeholder="Name" min="0" step="1" name="ItemRate" required>
                                            <label for="name">Rate*</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xl-6 col-12">
                                    <div class="row">
                                        <div class="col-md-6 col-12 form-floating mt-3">
                                            <input type="number" class="form-control" id="quantity" placeholder="Name" min="0" step="1" name="ItemQuantity" required>
                                            <label for="quantity">Quantity*</label>
                                        </div>
                                        <div class="col-md-6 col-12 form-floating mt-3">
                                            <select class="form-select" id="unitDropdown" aria-label="Select Food Category" name="ItemUnit" required>
                                                <option value="piece" selected>piece</option>
                                                <option value="plate">plate</option>
                                                <option value="bowl">bowl</option>
                                                <option value="bottle">bottle</option>
                                                <option value="slice">slice</option>

                                            </select>
                                            <label for="itemTypeDropdown">Unit*</label>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-xl-6 col-12 mt-3">
                                    <div class="row">
                                        <div class="col-6 form-check form-switch d-flex justify-content-center align-items-center">
                                            <input class="form-check-input" type="checkbox" id="availableToggle" style="height: 30px; width: 3.5rem;" name="ItemAvailable">
                                            <label class="form-check-label ms-2" for="availableToggle">Available</label>
                                            <input type="hidden" name="ItemAvailable" value="false"> 
                                        </div>
                                        <div class="col-6 form-check form-switch d-flex justify-content-center align-items-center">
                                            <input class="form-check-input" type="checkbox" id="defaultTaxToggle" style="height: 30px; width: 3.5rem;" name="DefaultTax">
                                            <label class="form-check-label ms-2" for="defaultTaxToggle">Default Tax</label>
                                            <input type="hidden" name="DefaultTax" value="false"> 
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xl-6 col-12">
                                    <div class="row">
                                        <div class="col-md-6 col-12 form-floating mt-3">
                                            <input type="number" class="form-control" id="taxpercentage" placeholder="Name" min="0" step="0.01" name="ItemTaxPercentage">
                                            <label for="taxpercentage">Tax Percentage</label>
                                        </div>
                                        <div class="col-md-6 col-12 form-floating mt-3">
                                            <input type="text" class="form-control" id="shortcode" placeholder="Name" name="ItemShortCode">
                                            <label for="shortcode">Short Code</label>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row mt-3">
                                <div class="form-floating">
                                    <textarea class="form-control" id="description" placeholder="Enter description" rows="5" style="height: 100px;" name="ItemDescription" required></textarea>
                                    <label for="description">Description</label>
                                </div>
                            </div>


                            <div class="mt-3 fs-6" style="opacity: 0.75;">Upload Image</div>
                            <div class="row mt-0">
                                <div style="position: relative;">
                                    <input type="file" class="form-control" id="itemImage" placeholder="" style="height: 90px; position: absolute; opacity: 0;" name="ItemImage">
                                    <div id="file-box" style="height: 90px; border: 1px dashed rgb(173, 170, 170); border-radius: 5px;" class="d-flex justify-content-center align-items-center">
                                        <img src="~/images/select-files.jfif" alt="" style="height: 29px; margin-right: 8px;"> Drag and Drop or Browse files
                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="col-md-4 mt-3 col-12 px-2 " style="background-color: #fff5d7; border-radius: 5px; height:460px; overflow-y: auto;">
                            <div class="mod-group-select mt-2">
                                <div id="modifierGroupDropdown" style="background-color: white; border-radius: 5px;" class="p-2 d-flex align-items-center justify-content-between">
                                    Select Modifier Group 
                                    <img src="~/images/dropdownimg.webp" alt="" style="height: 15px;">
                                </div>

                                <div id="modGroupCheckBoxes" class="bg-white p-3 mt-2 d-none" style="border-radius: 5px;">

                                </div>

                                <div id="modGroupDetailsModule">
                                    @* <partial name="~/Views/Menu/_PartialModGroupDetails.cshtml"/> *@
                                </div>

                            </div>
                        </div>

                    </div>

                    <div class="d-flex justify-content-end mt-3">
                        <button type="submit" class="save-cancel-btn fw-semibold" id="save-btn">Save</button>
                        <button type="button" class="save-cancel-btn fw-semibold" id="cancel-btn" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- edit item modal  -->
    <div class="modal fade" id="editItemModel" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered w-75" style="max-width: 100% !important">
            <div class="modal-content">
                <!-- </div> -->
                <form class="modal-body additemform" asp-action="MenuListItemEdit" method="post" enctype="multipart/form-data">
                    <div class="d-flex justify-content-between">
                        <div class="special-color fw-bold fs-4">Edit Item</div>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>

                    <input type="text" id="idEdit" name="ItemId" hidden>

                    <div class="row pe-2 mt-2">
                        <div class="col-md-8 col-12">
                            <div class="row">
                                <div class="col-md-6 col-12 form-floating mt-3">
                                    <select class="form-select" id="categoryDropdownEdit" aria-label="Select Food Category" name="ItemCategory" required>
                                        @foreach(var category in Model.categoryList)
                                        {
                                            @* <option value="@category.Categoryid" selected="@(category.Categoryid == Model.items.Categoryid)">@category.Categoryname</option> *@
                                            <option value="@category.Categoryid">@category.Categoryname</option>

                                        }
                                    </select>
                                    <label for="categoryDropdownEdit">Food Category</label>
                                </div>
                                <div class="col-md-6 col-12 form-floating mt-3">
                                    <input type="text" class="form-control" id="nameEdit" placeholder="Name" name="ItemName" required>
                                    <label for="nameEdit">Name*</label>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-xl-6 col-12">
                                    <div class="row">
                                        <div class="col-md-6 col-12 form-floating mt-3">
                                            <select class="form-select" id="itemTypeDropdownEdit" aria-label="Select Food Category" name="ItemType">
                                                @* <option value="" selected disabled>Select Category</option> *@
                                                <option value="true" selected>Veg</option>
                                                <option value="false">Non-Veg</option>
                                            </select>
                                            <label for="itemTypeDropdownEdit">Item Type</label>
                                        </div>
                                        <div class="col-md-6 col-12 form-floating mt-3">
                                            <input type="number" class="form-control" id="rateEdit" placeholder="Name" value="0" min="0" step="1" name="ItemRate" required>
                                            <label for="rateEdit">Rate*</label>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xl-6 col-12">
                                    <div class="row">
                                        <div class="col-md-6 col-12 form-floating mt-3">
                                            <input type="number" class="form-control" id="quantityEdit" placeholder="Name" value="0" min="0" step="1" name="ItemQuantity" required>
                                            <label for="quantityEdit">Quantity*</label>
                                        </div>
                                        <div class="col-md-6 col-12 form-floating mt-3">
                                            <select class="form-select" id="unitDropdownEdit" aria-label="Select Food Category" name="ItemUnit" required>
                                                @* <option value="" selected disabled>Select a Unit</option> *@
                                                <option value="piece" selected>piece</option>
                                                <option value="plate">plate</option>
                                                <option value="bowl">bowl</option>
                                                <option value="bottle">bottle</option>
                                                <option value="slice">slice</option>

                                            </select>
                                            <label for="unitDropdownEdit">Unit*</label>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-xl-6 col-12 mt-3">
                                    <div class="row">
                                        <div class="col-6 form-check form-switch d-flex justify-content-center align-items-center">
                                            <input class="form-check-input" type="checkbox" id="availableToggleEdit" style="height: 30px; width: 3.5rem;" name="ItemAvailable">
                                            <label class="form-check-label ms-2" for="availableToggleEdit">Available</label>
                                            <input type="hidden" name="ItemAvailable" value="false"> 
                                        </div>
                                        <div class="col-6 form-check form-switch d-flex justify-content-center align-items-center">
                                            <input class="form-check-input" type="checkbox" id="defaultTaxToggleEdit" style="height: 30px; width: 3.5rem;" name="DefaultTax">
                                            <label class="form-check-label ms-2" for="defaultTaxToggleEdit">Default Tax</label>
                                            <input type="hidden" name="DefaultTax" value="false"> 
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xl-6 col-12">
                                    <div class="row">
                                        <div class="col-md-6 col-12 form-floating mt-3">
                                            <input type="number" class="form-control" id="taxpercentageEdit" placeholder="Name" min="0" step="0.01" name="ItemTaxPercentage">
                                            <label for="taxpercentageEdit">Tax Percentage</label>
                                        </div>
                                        <div class="col-md-6 col-12 form-floating mt-3">
                                            <input type="text" class="form-control" id="shortcodeEdit" placeholder="Name" name="ItemShortCode">
                                            <label for="shortcodeEdit">Short Code</label>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="row mt-3">
                                <div class="form-floating">
                                    <textarea class="form-control" id="descriptionEdit" placeholder="Enter description" rows="5" style="height: 100px;" name="ItemDescription" required></textarea>
                                    <label for="descriptionEdit">Description</label>
                                </div>
                            </div>


                            <div class="mt-3 fs-6" style="opacity: 0.75;">Upload Image</div>
                            <div class="row mt-0">
                                <div style="position: relative;">
                                    <input type="file" class="form-control" id="itemImageEdit" placeholder="" style="height: 90px; position: absolute; opacity: 0;" name="ItemImage">
                                    <div id="file-box-edit" style="height: 90px; border: 1px dashed rgb(173, 170, 170); border-radius: 5px;" class="d-flex justify-content-center align-items-center">
                                        <img src="~/images/select-files.jfif" alt="" style="height: 29px; margin-right: 8px;"> Drag and Drop or Browse files
                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="col-md-4 mt-3 col-12 px-2 " style="background-color: #fff5d7; border-radius: 5px; height:460px; overflow-y: auto;">
                            <div class="mod-group-select mt-2">
                                <div id="modifierGroupDropdownForEdit" style="background-color: white; border-radius: 5px;" class="p-2 d-flex align-items-center justify-content-between">
                                    Select Modifier Group 
                                    <img src="~/images/dropdownimg.webp" alt="" style="height: 15px;">
                                </div>

                                <div id="modGroupCheckBoxesForEdit" class="bg-white p-3 mt-2 d-none" style="border-radius: 5px;">

                                </div>

                                <div id="modGroupDetailsModuleForEdit">
                                    @* <partial name="~/Views/Menu/_PartialModGroupDetails.cshtml"/> *@
                                </div>

                                <div onclick="getModGroupDataForEdit()">
                                    click
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="d-flex justify-content-end mt-3">
                        <button type="submit" class="save-cancel-btn fw-semibold" id="save-btn">Save</button>
                        <button type="button" class="save-cancel-btn fw-semibold" id="cancel-btn" data-bs-dismiss="modal">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Delete item Modal -->
    <div class="modal fade" id="deleteItemModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <!-- </div> -->
                <form class="modal-body" asp-action="MenuListItemDelete" method="post">
                    <div class="d-flex justify-content-between mb-3">
                        <h1 class="modal-title fs-5 fw-semibold special-color" id="exampleModalLabel">Delete Confirmation</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <input type="text" name="ItemId" id="deleteitemId" hidden>

                    <div class="d-flex align-items-center flex-column justify-content-center mb-4">
                        <img src="~/images/warning.png" alt="" style="height: 35px; width: 35px;">
                        <div class="f-5">Are You Sure you want to delete Item ?</div>
                    </div>

                    <div class="d-flex justify-content-center">
                        <button type="submit" class="save-cancel-btn fw-semibold" id="save-btn">Yes</button>
                        <button type="button" class="save-cancel-btn fw-semibold" id="cancel-btn" data-bs-dismiss="modal">No</button>
                    </div>

                </form>
            </div>
        </div>
    </div>

    <!-- add modifier group modal  -->
    <div class="modal fade" id="addModifierGroupModel" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered w-50">
            <div class="modal-content">
                <!-- </div> -->
                <div id="addModifierGroupContent">
                    <!-- Partial view content will be loaded here -->
                </div>
                
            </div>
        </div>
    </div>

    <!-- edit modifier group modal  -->
    <div class="modal fade" id="editModifierGroupModel" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered w-50">
            <div class="modal-content">
                <!-- </div> -->
                <div id="editModifierGroupContent">
                    
                    <!-- Partial view content will be loaded here -->
                </div>


            </div>
        </div>
    </div>

    <!-- delete modifier group modal  -->
    <div class="modal fade" id="deleteModifierGroupModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <!-- </div> -->
                <form class="modal-body" asp-action="MenuListModGroupDelete" method="post">
                    <div class="d-flex justify-content-between mb-3">
                        <h1 class="modal-title fs-5 fw-semibold special-color" id="exampleModalLabel">Delete Confirmation</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <input type="text" name="deleteModGroup" id="deleteModGroupIdinput" >

                    <div class="d-flex align-items-center flex-column justify-content-center mb-4">
                        <img src="~/images/warning.png" alt="" style="height: 35px; width: 35px;">
                        <div class="f-5">Are You Sure you want to delete Mod Group ?</div>
                    </div>

                    <div class="d-flex justify-content-center">
                        <button type="submit" class="save-cancel-btn fw-semibold" id="save-btn">Yes</button>
                        <button type="button" class="save-cancel-btn fw-semibold" id="cancel-btn" data-bs-dismiss="modal">No</button>
                    </div>

                </form>
            </div>
        </div>
    </div>

    <!-- add modifier item modal  -->
    <partial name="~/Views/Menu/_AddModItemModal.cshtml"/>
    <!-- edit modifier item modal  -->
    <partial name="~/Views/Menu/_EditModItemModal.cshtml"/>
    <!-- delete modifier item modal  -->
    <partial name="~/Views/Menu/_DeleteModItemModal.cshtml"/>



</div>

<script>
    var newvariable = "Hi My Name is Naman";

    let modifierIds = new Set();
    let modifierNames = new Set();

    function updateSelectedModifiers() {
        let selectedModifiersDiv = $('#selectedModifiers');
        selectedModifiersDiv.empty(); // Clear existing content

        @* modifierNames.forEach(function(name) {
            selectedModifiersDiv.append(`
                <span class="mod-name-text">
                    ${name}
                    <i class="bi bi-x-lg dark-icon"></i>
                </span>
            `);
        }); *@

        @* modifierNames.forEach(function(name) {
            let itemId = Array.from(modifierIds).find(id => name === $(`[data-itemid="${id}"]`).data('itemname'));
            console.log(itemId);
            selectedModifiersDiv.append(`
                <span class="mod-name-text" data-itemid="${itemId}">
                    ${name} ${itemId}
                    <i class="bi bi-x-lg cross-icon" data-itemid="${itemId}" data-itemname="${name}"></i>
                </span>
            `);
        }); *@

        let modifierIdsArray = Array.from(modifierIds);
        let modifierNamesArray = Array.from(modifierNames);

        modifierNamesArray.forEach(function(name, index) {
            let itemId = modifierIdsArray[index];
            selectedModifiersDiv.append(`
                <span class="mod-name-text" data-itemid="${itemId}">
                    ${name} ${itemId}
                    
                <i class="bi bi-x-lg cross-icon" data-itemid="${itemId}" data-itemname="${name}"></i></span>
            `);
        });

        $('.cross-icon').on('click', function() {
            let itemId = $(this).data('itemid');
            let itemName = $(this).data('itemname');

            console.log(itemId);
            console.log(itemName);
            modifierIds.delete(itemId);
            modifierNames.delete(itemName);
            updateSelectedModifiers(); // Update the selected modifiers display

            $(`.inner-check-modifiers-list[data-itemid="${itemId}"]`).prop('checked', false);
        });

        console.log(Array.from(modifierIds)); // For debugging purposes
        console.log(Array.from(modifierNames)); // For debugging purposes
    }

    
    function addExistingModifiers()
    {
        console.log(newvariable);
        $.ajax({
            url: '/Menu/getExistingModifiers',
            type: 'GET',

            success: function (data) {
                $('#addModifierGroupContent').html(data);
            },
            error: function () {
                alert('Error loading the modal content');
            }

        });
    }

  
    function updateSelectedModifiersForEdit(modifiersIdList = null, modifiersName = null) {
        let selectedModifiersDiv = $('#selectedModifiersforEdit');
        selectedModifiersDiv.empty(); // Clear existing content

        if(modifiersIdList && modifiersName)
        {
            modifierNames = new Set(modifiersName);
            modifierIds = new Set(modifiersIdList);

            console.log(Array.from(modifierIds)); // For debugging purposes
            console.log(Array.from(modifierNames)); // For debugging purposes
        }
        let modifierIdsArray = Array.from(modifierIds);
        let modifierNamesArray = Array.from(modifierNames);

        modifierNamesArray.forEach(function(name, index) {
            let itemId = modifierIdsArray[index];
            selectedModifiersDiv.append(`
                <span class="mod-name-text" data-itemid="${itemId}">
                    ${name} ${itemId}
                    <i class="bi bi-x-lg cross-icon" data-itemid="${itemId}" data-itemname="${name}"></i>
                </span>
            `);
        });


        @* modifierNames.forEach(function(name) {
            let itemId = Array.from(modifierIds).find(id => name === $(`[data-itemid="${id}"]`).data('itemname'));
            console.log(itemId);
            selectedModifiersDiv.append(`
                <span class="mod-name-text" data-itemid="${itemId}">
                    ${name} ${itemId}
                    <i class="bi bi-x-lg cross-icon" data-itemid="${itemId}" data-itemname="${name}"></i>
                </span>
            `);
        }); *@

        $('.cross-icon').on('click', function() {
            let itemId = $(this).data('itemid');
            let itemName = $(this).data('itemname');

            console.log(itemId + ": " + itemName);
            modifierIds.delete(itemId);
            modifierNames.delete(itemName);
            updateSelectedModifiersForEdit(); // Update the selected modifiers display


            $(`.inner-check-modifiers-list[data-itemid="${itemId}"]`).prop('checked', false);
        });

        console.log(Array.from(modifierIds)); // For debugging purposes
        console.log(Array.from(modifierNames)); // For debugging purposes
    }

    var addExistingModifiersBtn;
    var backBtn;
    var modifierAddForm;
    var selectExistingModifiersTab;

    var addExistingModifiersBtnForEdit;
    var backBtnForEdit;
    var modifierAddFormForEdit;
    var selectExistingModifiersTabForEdit;
    var cancelBtnsForEdit;


    $(document).ready(function()
    {
        $('#addModifierGroupModel').on('show.bs.modal', function () {
            console.log("Hiiiiiiiiiiiiiiiiiiiiiiiiiiii");
            $.ajax({
                url: '/Menu/AddModGroupModal',
                type: 'GET',
                success: function (data) {
                    $('#addModifierGroupContent').html(data);
                },
                error: function () {
                    alert('Error loading the modal content');
                }
            });
        });

        $('#addModifierGroupModel').on('hidden.bs.modal', function () {
            modifierIds.clear();
            modifierNames.clear();
        
            updateSelectedModifiers();
            location.reload();
        });

    // Edit Modifier Group ....................................
        $('#editModifierGroupModel').on('show.bs.modal', function () {
            @* console.log("Hiiiiiiiiiiiiiiiiiiiiiiiiiiii");
            $.ajax({
                url: '/Menu/AddModGroupModal',
                data: {modifierGroupId : 1},
                type: 'GET',
                success: function (data) {
                    $('#editModifierGroupContent').html(data);
                },
                error: function () {
                    alert('Error loading the modal content');
                }
            }); *@
        });

        $('#editModifierGroupModel').on('hidden.bs.modal', function () {
            modifierIds.clear();
            modifierNames.clear();

            updateSelectedModifiersForEdit();
            location.reload();
        });

    });

    document.getElementById('availableToggle').addEventListener('change', function () {
        if (!this.checked) {
            this.value = "false"; // set value to false if unchecked
        } else {
            this.value = "true"; // set value to true if checked
        }
    });


    document.getElementById('defaultTaxToggle').addEventListener('change', function () {
        if (!this.checked) {
            this.value = "false"; // set value to false if unchecked
        } else {
            this.value = "true"; // set value to true if checked
        }
    });

    document.getElementById('availableToggleEdit').addEventListener('change', function () {
        if (!this.checked) {
            this.value = "false"; // set value to false if unchecked
        } else {
            this.value = "true"; // set value to true if checked
        }
    });

    document.getElementById('defaultTaxToggleEdit').addEventListener('change', function () {
        if (!this.checked) {
            this.value = "false"; // set value to false if unchecked
        } else {
            this.value = "true"; // set value to true if checked
        }
    });

    document.getElementById('itemImage').addEventListener('change', function () {
        var fileInput = this;
        var fileBox = document.getElementById('file-box');
        
        // If a file is selected
        if (fileInput.files.length > 0) {
            fileBox.style.borderColor = "rgb(0, 123, 255)"; // Change to desired border color (e.g., blue)
        } else {
            fileBox.style.borderColor = "rgb(173, 170, 170)"; // Original border color (gray)
        }
    });

    document.getElementById('itemImageEdit').addEventListener('change', function () {
        var fileInput = this;
        var fileBox = document.getElementById('file-box-edit');
        
        // If a file is selected
        if (fileInput.files.length > 0) {
            fileBox.style.borderColor = "rgb(0, 123, 255)"; // Change to desired border color (e.g., blue)
        } else {
            fileBox.style.borderColor = "rgb(173, 170, 170)"; // Original border color (gray)
        }
    });

    function editCategory(element)
    {
        var catId = element.getAttribute('data-id');
        var catName = element.getAttribute('data-name');
        var catDesc = element.getAttribute('data-desc');

        document.getElementById("inputcategoryId").value = catId;
        document.getElementById("inputcategoryName").value = catName;
        document.getElementById("inputcategoryDescription").value = catDesc;

    }

    function editModGroup(element)
    {
        var catId = element.getAttribute('data-id');

        console.log("Edit Mod Group: " + catId);
        $('#editModifierGroupModel').modal('show');
        $.ajax({
            url: '/Menu/AddModGroupModal',
            data: {modifierGroupId : catId},
            type: 'GET',
            success: function (data) {
                $('#editModifierGroupContent').html(data);
            },
            error: function () {
                alert('Error loading the modal content');
            }
        });

    }

    function deleteModGroup(element)
    {
        var catId = element.getAttribute('data-id');
        console.log(catId);

        $('#deleteModGroupIdinput').val(catId);
    }

    function deleteCategory(element)
    {
        var catId = element.getAttribute('data-id');
        document.getElementById("deletecategoryId").value = catId;
    }


    function deleteItem(element)
    {
        var itemId = element.getAttribute('data-id');
        document.getElementById("deleteitemId").value = itemId;
    }



    
$("#categoryAddForm").submit(function (e) {

    formData = new FormData(this);
    event.preventDefault();

    console.log(formData);

    $.ajax({
        type: "POST",
        url: "/Menu/MenuListCategoryAdd",
        data: formData,
        processData: false,
        contentType: false,
        success:function (response)
        {
            if(response.success)
            {
                toastr.success(response.message);
                $('#addCategoryModel').modal('hide');
            }else{
                $('#categoryNameError').html(response.message);
            }
        }
    });
});


$("#categoryEditForm").submit(function (e) {

    event.preventDefault();

    let formData = new FormData(this);


    $.ajax({
        type: "POST",
        url: "/Menu/MenuListCategoryEdit",
        data: formData,
        processData: false,
        contentType: false,
        success:function (response)
        {
            if(response.success)
            {
                toastr.success(response.message);
                $('#editCategoryModal').modal('hide');
            }else{
                $('#categoryNameEditError').html(response.message);
            }
        }
    });
});





function AddModGroup(formData)
{
    let modifierIdsArray = Array.from(modifierIds);  // Convert Set to Array
    modifierIdsArray.forEach(function(id) {
        formData.append('Modifiersidlist[]', id);  // Append each selected ID to modGroupList[]
    });

    // Perform AJAX request
    $.ajax({
        type: "POST",
        url: "/Menu/MenuListModGroupAdd",  // Update this URL to your actual route
        data: formData,
        processData: false,  // Don't process the data (FormData will handle it)
        contentType: false,  // Let the browser set the correct content type
        success: function (response) {
            $('#addModifierGroupModel').modal('hide');
        },
        error: function (xhr, status, error) {
            // Handle AJAX error here
            console.log("AJAX error:", status, error);
            toastr.error("There was an error submitting the form.");  // Show error notification
        }
    });
}

function EditModGroup(formData)
{
        let modifierIdsArray = Array.from(modifierIds);  // Convert Set to Array
    modifierIdsArray.forEach(function(id) {
        formData.append('Modifiersidlist[]', id);  // Append each selected ID to modGroupList[]
    });

    // Perform AJAX request
    $.ajax({
        type: "POST",
        url: "/Menu/MenuListModGroupEdit",  // Update this URL to your actual route
        data: formData,
        processData: false,  // Don't process the data (FormData will handle it)
        contentType: false,  // Let the browser set the correct content type
        success: function (response) {
            $('#editModifierGroupModel').modal('hide');
        },
        error: function (xhr, status, error) {
            // Handle AJAX error here
            console.log("AJAX error:", status, error);
            toastr.error("There was an error submitting the form.");  // Show error notification
        }
    });   
}

function addModifier(formData)
{
    $.ajax({
        type: "POST",
        url: "/Menu/ModifierAdd",  // Update this URL to your actual route
        data: formData,
        processData: false,  // Don't process the data (FormData will handle it)
        contentType: false,  // Let the browser set the correct content type
        success: function (response) {
            if(response.success){
                @* $('#addModifieritemModal').modal('dispose'); *@
                $('#addModifieritemModal').modal('hide');

                toastr.success(response.messages);
            }else{
                console.log("Hi you have got error");
                toastr.error(response.messages);
            }

        },
        error: function (xhr, status, error) {
            // Handle AJAX error here
            console.log("AJAX error:", status, error);
            alert("There was an error submitting the form.");  // Show error notification
        }
    });
}

function editModifierForPost(formData)
{
    console.log("Why it is here?"); 
    @* for (let [key, value] of formData.entries()) {
        console.log(key, value);
    } *@
    $.ajax({
        type: "POST",
        url: "/Menu/ModifierEdit",  // Update this URL to your actual route
        data: formData,
        processData: false,  // Don't process the data (FormData will handle it)
        contentType: false,  // Let the browser set the correct content type
        success: function (response) {
            if(response.success){
                $('#editModifieritemModal').modal('hide');

                toastr.success(response.messages);
            }else{
                console.log("Hi you have got error");
                toastr.error(response.messages);
            }

        },
        error: function (xhr, status, error) {
            // Handle AJAX error here
            console.log("AJAX error:", status, error);
            alert("There was an error submitting the form.");  // Show error notification
        }
    });
}
// ---------------------------------------------- All about Modifiers -------------------------------------------------------------
var isTabLoaded = false;



document.getElementById('nav-profile-tab').addEventListener('click', function(){

    if(!isTabLoaded)
    {
        $.ajax({
            type: "GET",
            url: "/Menu/MenuModifiersList",
            success: function(response) {
                console.log("Tab content loaded successfully");
                $('#nav-profile').html(response); // Inject the response into the tab
                isTabLoaded = true;
            },
            error: function(xhr, status, error) {
                console.error("Error loading data: ", error);
            }
        });
        
    }else{
        console.log("Tab is loaded");
    }
}); 




// ---------------------------------- Add Item --------------------------

document.getElementById('modifierGroupDropdown').addEventListener('click', function() {

    var modGroupCheckBoxes = document.getElementById('modGroupCheckBoxes');
    if (modGroupCheckBoxes.classList.contains('d-none')) {
        modGroupCheckBoxes.classList.remove('d-none');
    } else {
        modGroupCheckBoxes.classList.add('d-none');
    }
});

function addItems(element)
{
    var categoryId = element.getAttribute('data-catid');
    console.log(categoryId);

    $('#addItemModel').on('shown.bs.modal', function () {
        $('#categoryDropdown').val(categoryId);
    });

    $("#modGroupCheckBoxes").empty();
    $('#modGroupDetailsModule').empty();
    
    $.ajax({
        url: '/Menu/getModifierNames',
        type: 'GET',
        data: {}, 
        success: function(result){

            console.log(result);
            
            for(let i=0;i<result.modGroupList.length;i++)
            {
                console.log(result.modGroupList[i].modgroupid + ":" + result.modGroupList[i].modgroupname);
                $("#modGroupCheckBoxes").append(
                    `<div class="form-check mb-1">
                        <input class="form-check-input" type="checkbox" name="Modifiers" value="${result.modGroupList[i].modgroupid}">
                        <label class="form-check-label" for="flexCheckDefault">
                            ${result.modGroupList[i].modgroupname}
                        </label>
                    </div>`
                );
            }  

            
        },
        error: function() {
            console.error("Failed to fetch item data.");
        }
    });

}

$("#modGroupCheckBoxes").on('change', 'input[name="Modifiers"]', function () {
    var selectedModGroupId = $(this).val(); // Get the modgroupid
    var isChecked = $(this).prop('checked'); // Check if the checkbox is checked

    if (isChecked) {
        // Perform the AJAX call to get the partial view
        $.ajax({
            url: '/Menu/AddModGroupDetails', // Update with your controller's URL and action method
            type: 'GET',
            data: { modGroupId: selectedModGroupId },
            success: function (response) {
                // On success, append the partial view to the #modGroupDetailsModule
                if ($('#modGroupDetailsModule').find(`.mod-group-${selectedModGroupId}`).length === 0) {
                    // Append the partial view to the #modGroupDetailsModule
                    $('#modGroupDetailsModule').append(
                        `<div class="mod-group-${selectedModGroupId} mod-group-detail mt-2">
                            ${response}
                        </div>`
                    );
                }
                @* $('#modGroupDetailsModule').removeClass('d-none'); // Ensure the module is visible *@
            },
            error: function (error) {
                console.log('Error fetching data: ', error);
            }
        });
    } else {
        $('#modGroupDetailsModule').find(`.mod-group-${selectedModGroupId}`).remove();
    }
});

function getModGroupData()
{
    var modGroupData = [];
    
    $('.mod-group-detail').each(function() {
        var modGroupId = $(this).find('.delete-modifier-group').data('modgroupid'); // Get the modGroupId from the delete button
        
        var minValue = $(this).find('.min-select').val(); // Get the value of the min select
        var maxValue = $(this).find('.max-select').val(); // Get the value of the max select
        
        modGroupData.push({
            modGroupId: modGroupId,
            Min: minValue,
            Max: maxValue
        });
    });

    return modGroupData;
}

$("#itemAddForm").submit(function (e) {

    event.preventDefault();
    let formData = new FormData(this);

    var modGroupList = getModGroupData();
    formData.append("modGroupList", JSON.stringify(modGroupList));

    $.ajax({
        type: "POST",
        url: "/Menu/MenuListItemAdd",
        data: formData,
        processData: false,
        contentType: false,
        success:function (response)
        {
            if(response.success)
            {
                toastr.success(response.message);
                $('#addItemModel').modal('hide');

                window.location.href = response.urlToRedirect;
            }else{
                $('#categoryNameEditError').html(response.message);
            }
        }
    });
});


// ---------------------------------- Edit Item --------------------------
document.getElementById('modifierGroupDropdownForEdit').addEventListener('click', function() {

    var modGroupCheckBoxes = document.getElementById('modGroupCheckBoxesForEdit');
    if (modGroupCheckBoxes.classList.contains('d-none')) {
        modGroupCheckBoxes.classList.remove('d-none');
    } else {
        modGroupCheckBoxes.classList.add('d-none');
    }
});

function editItem(element, itemid)
{
    console.log(itemid);
    var isavailable;
    var defaulttax;

    $.ajax({
        url: '/Menu/ItemDetailsForEdit',
        type: 'GET',
        data: {Itemid: itemid}, 
        success: function(response){

            console.log(response);
            @* $('#idEdit').val(response.itemid);
            $('#nameEdit').val(response.itemname);
            $('#categoryDropdownEdit').val(response.categoryid);
            $('#itemTypeDropdownEdit').val(response.itemtype.toString()); 
            $('#rateEdit').val(response.rate);
            $('#quantityEdit').val(response.quantity);
            $('#unitDropdownEdit').val(response.unit);
            $('#taxpercentageEdit').val(response.taxpercentage);
            $('#shortcodeEdit').val(response.shortcode);
            $('#descriptionEdit').val(response.description);

            // Set the toggle buttons based on the data returned
            $('#availableToggleEdit').prop('checked', response.isavailable);
            $('#availableToggleEdit').val(response.isavailable);

            $('#availableToggleEdit').next('input[type="hidden"]').val(response.isavailable); // Set the hidden field value

            $('#defaultTaxToggleEdit').prop('checked', response.defaulttax);
            $('#defaultTaxToggleEdit').next('input[type="hidden"]').val(response.defaulttax); // Set the hidden field value
            $('#defaultTaxToggleEdit').val(response.defaulttax);


            $('#editItemModel').modal('show'); *@
@* 
            $('#availableToggleEdit').prop('checked', response.isavailable);
            $('#defaultTaxToggleEdit').prop('checked', response.defaulttax); *@

            
        },
        error: function() {
            console.error("Failed to fetch item data.");
        }
    });

    $("#modGroupCheckBoxesForEdit").empty();
    $('#modGroupDetailsModuleForEdit').empty();

    $.ajax({
        url: '/Menu/getModifierNames',
        type: 'GET',
        data: {}, 
        success: function(result){

            console.log(result);
            
            for(let i=0;i<result.modGroupList.length;i++)
            {
                console.log(result.modGroupList[i].modgroupid + ":" + result.modGroupList[i].modgroupname);
                $("#modGroupCheckBoxesForEdit").append(
                    `<div class="form-check mb-1">
                        <input class="form-check-input" type="checkbox" name="Modifiers" value="${result.modGroupList[i].modgroupid}">
                        <label class="form-check-label" for="flexCheckDefault">
                            ${result.modGroupList[i].modgroupname}
                        </label>
                    </div>`
                );
            }  
 
        },
        error: function() {
            console.error("Failed to fetch item data.");
        }
    });


}

$("#modGroupCheckBoxesForEdit").on('change', 'input[name="Modifiers"]', function () {
    var selectedModGroupId = $(this).val(); // Get the modgroupid
    var isChecked = $(this).prop('checked'); // Check if the checkbox is checked

    if (isChecked) {
        // Perform the AJAX call to get the partial view
        $.ajax({
            url: '/Menu/AddModGroupDetails', // Update with your controller's URL and action method
            type: 'GET',
            data: { modGroupId: selectedModGroupId },
            success: function (response) {
                // On success, append the partial view to the #modGroupDetailsModule
                if ($('#modGroupDetailsModuleForEdit').find(`.mod-group-${selectedModGroupId}`).length === 0) {
                    // Append the partial view to the #modGroupDetailsModule
                    $('#modGroupDetailsModuleForEdit').append(
                        `<div class="mod-group-${selectedModGroupId} mod-group-detail mt-2">
                            ${response}
                        </div>`
                    );
                }
                @* $('#modGroupDetailsModule').removeClass('d-none'); // Ensure the module is visible *@
            },
            error: function (error) {
                console.log('Error fetching data: ', error);
            }
        });
    } else {
        $('#modGroupDetailsModuleForEdit').find(`.mod-group-${selectedModGroupId}`).remove();
    }
});

function getModGroupDataForEdit()
{
    var modGroupData = [];
    
    $('.mod-group-detail').each(function() {
        var modGroupId = $(this).find('.delete-modifier-group').data('modgroupid'); // Get the modGroupId from the delete button
        
        var minValue = $(this).find('.min-select').val(); // Get the value of the min select
        var maxValue = $(this).find('.max-select').val(); // Get the value of the max select
        
        modGroupData.push({
            modGroupId: modGroupId,
            Min: minValue,
            Max: maxValue
        });
    });

    console.log(modGroupData);
    @* return modGroupData; *@
}


</script>

<script src="~/js/MenuList.js"></script>
