<div class="modal fade" id="addModifieritemModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl " style="width: 95% !important">
        <div class="modal-content p-4">
            <!-- Modal Header with Close Button -->
            <div class="d-flex justify-content-between">
                <h5 class="modal-title special-color fw-bold">Add New Modifier</h5>
                <!-- Close button -->
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form class="mt-3" id="addModifierFormX">
                <div class="row g-3">

                    <div class="col-md-6" style="position: relative; !important">
                        <div id="modifierGroupDropdownForList" style="border-radius: 0.25rem; border: 1px solid #ced4da;" class="d-flex justify-content-between align-items-center h-100 p-2">
                            <div>Select Modifier Group(s)</div>
                            <i class="bi bi-chevron-down"></i>
                        </div>
                        <ul class="mt-3 w-75 ps-0 border rounded bg-white p-2 d-none" id="modifierGroupCheckboxesForList" style="height: 175px; overflow-y: auto; position: absolute !important; top: 50px; z-index: 1000; list-style: none;">
                            <!-- Checkboxes will be dynamically added here -->
                        </ul>
                    </div>

                    <div class="col-md-6">
                        <div class="form-floating">
                            <input type="text" class="form-control" id="nameModifierName" placeholder="Name" name="Modifiername" required>
                            <label for="name">Name*</label>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-floating">
                            <input type="number" class="form-control" id="rateModifierrate" placeholder="Name" min="0" step="1" name="Rate" required>
                            <label for="name">Rate*</label>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-floating">
                            <input type="number" class="form-control" id="quantity" placeholder="Name" min="0" step="1" name="Quantity" required>
                            <label for="quantity">Quantity*</label>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-floating">
                            <select class="form-select" id="unitModifierunit" name="Unit">
                                <option value="piece" selected>piece</option>
                                <option value="plate">plate</option>
                                <option value="bowl">bowl</option>
                                <option value="bottle">bottle</option>
                                <option value="slice">slice</option>
                            </select>
                            <label for="unit">Unit*</label>
                        </div>
                    </div>

                    <div class="col-md-12">
                        <div class="form-floating">
                            <textarea class="form-control" id="description" placeholder="Description..." style="height: 80px;" name="Description"></textarea>
                            <label for="description">Description</label>
                        </div>
                    </div>

                </div>
                <div class="d-flex justify-content-end mt-3">
                <button type="submit" id="savebtn" class="btn text-white" style="background-color: #0066A7;">Save</button>
                    <button type="button" class="btn ms-2" style="border-color: #0066A7; color: #0066A7; text-decoration: none;" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

<script>
var selectedGroups = new Set();  // Use a Set to store selected groups

$("#modifierGroupDropdownForList").on('click', function() {
    $("#modifierGroupCheckboxesForList").toggleClass('d-none'); 
    $(this).find('i').toggleClass('bi-chevron-down bi-chevron-up');  
});

document.getElementById("addModifieritemModal").addEventListener('show.bs.modal', function () {
    selectedGroups.clear();  // Clear the selected groups when the modal is shown

    $.ajax({
        url: '/Menu/getModifierNames',
        type: 'GET',
        data: {},
        success: function (result) {
            console.log(result);
            // Store the result globally
            modGroupListData = result.modGroupList;

            // Dynamically append checkboxes
            for (let i = 0; i < result.modGroupList.length; i++) {
                const checkboxHtml = `
                    <li class="px-2">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="${result.modGroupList[i].modgroupid}" id="modGroup${i}">
                            <label class="form-check-label" for="modGroup${i}">
                                ${result.modGroupList[i].modgroupname}
                            </label>
                        </div>
                    </li>
                `;
                $("#modifierGroupCheckboxesForList").append(checkboxHtml);

                // Add event listener for checking/unchecking
                $(`#modGroup${i}`).on('change', function () {
                    if (this.checked) {
                        selectedGroups.add(this.value);  // Add to selectedGroups set
                    } else {
                        selectedGroups.delete(this.value);  // Remove from selectedGroups set
                    }
                    updateDropdownText(modGroupListData);  // Pass modGroupListData to the function
                });
            }
        },
        error: function () {
            console.error("Failed to fetch item data.");
        }
    });
});


function updateDropdownText(result) 
{
    if (selectedGroups.size > 0) {
        // Get the selected modgroup names from the Set
        var selectedNames = result.filter(group => selectedGroups.has(group.modgroupid.toString()))  // Check membership with Set
            .map(group => group.modgroupname);
        $("#modifierGroupDropdownForList div").text(selectedNames.join(', '));  // Display selected group names
    } else {
        $("#modifierGroupDropdownForList div").text("Select Modifier Group(s)");  // Default text
    }

    console.log([...selectedGroups]);  // Log selected groups (convert Set to Array for display)
}

// Reset modal when it is closed
document.getElementById("addModifieritemModal").addEventListener('hidden.bs.modal', function () {
    resetModal();
});

// Reset modal function to clear selected groups and reset UI
function resetModal() {
    selectedGroups.clear();  // Clear the Set of selected groups

    $("#modifierGroupDropdownForList div").text("Select Modifier Group(s)");  // Reset the dropdown text
    $('#modifierGroupCheckboxesForList input[type="checkbox"]').prop('checked', false);  // Uncheck all checkboxes
    $("#modifierGroupCheckboxesForList").addClass('d-none');  // Hide the dropdown list
    $('#modifierGroupCheckboxesForList').empty();
}

// submit the form
document.getElementById('addModifierFormX').addEventListener('submit', function(event)
{
    event.preventDefault();
    const formData = new FormData(this);

    let modGroupList = Array.from(selectedGroups);  // Convert Set to Array
    modGroupList.forEach(function(id) {
        formData.append('ModifiersGroupList[]', id);  // Append each selected ID to modGroupList[]
    });

    addModifier(formData);

});

</script>